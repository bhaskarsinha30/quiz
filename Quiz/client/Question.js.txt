import React, { useEffect, useState } from 'react'
//import data from '../database/data'
import { useFetchQuestion } from '../hooks/FetchQuestion'

import { useDispatch, useSelector } from 'react-redux'
// import { updateResultAction } from '../redux/result_reducer';
import { updateResult } from '../hooks/setResult';

export default function Questions({ onChecked}){


    const [checked, setChecked] = useState(undefined);
    const {trace} = useSelector(state => state.question);
    const result = useSelector(state => state.result.result);
     // eslint-disable-next-line
    const [{isloading , apiData , serverError}] = useFetchQuestion()
    // useSelector(state => console.log(state))
   // const question = data[0]

    const Questions  = useSelector(state => state.Questions.queue[state.Questions.trace])
    const dispatch = useDispatch()

    useEffect(() => {
        console.log({trace , checked})
        dispatch(updateResult({trace, checked}))
    }, [checked]);

    // useEffect(() => {
    //     //console.log(isloading)
    //     // console.log(apiData)
    //     // console.log(serverError)
    // })


    function onSelect(i){
        // setChecked(true)
        // console.log(i)
        onChecked(i)
        setChecked(i)
        dispatch(updateResult({trace, checked}))
    }

    if(isloading) return <h3 className='text-light'>isloading</h3>
    if(serverError) return <h3 className='text-light'>{serverError || "Unknown Error"}</h3>

    return (
        <div className='questions'>
            <h2 className='text-light'>{Questions?.question}</h2> 

            

            <ul key={Questions?.id}>
                {
                    Questions?.options.map((q, i) => (
                    <li key={i}>
                        <input 
                            type="radio"
                            value={false}
                            name="options"
                            id={`q${i}-option`}
                            onChange={() => onSelect(i)}
                        />
                
                

                        <label className='text-primary' htmlFor={`q${i}-option`}>{q}</label>  
                        <div className={`check ${result[trace] === i ? 'checked' : ''}`}></div>  
                    </li>
                    ))
                }    
            </ul>
        </div>
    )
}